 MODULE 1: User Authentication
Login, Registration, and Forgot Password pages

Use bcrypt to securely hash passwords

Implement JWT-based authentication

Store user credentials in MongoDB

Use Express middleware for protected routes

Add validation (empty fields, password length, duplicate user checks)

Frontend: basic HTML forms styled with custom CSS (clean, minimal)

üóÇÔ∏è MODULE 2: To-Do Management
Users can create, edit, delete, and update to-do items

Fields: title, description, status (pending/completed), createdAt, updatedAt

Tasks are user-specific (users can only manage their own)

CRUD routes:

GET /todos ‚Äì View all user tasks

POST /todos ‚Äì Add new task

POST /todos/:id/edit ‚Äì Edit task

POST /todos/:id/delete ‚Äì Delete task

POST /todos/:id/toggle-status ‚Äì Mark as completed/pending

All actions done through HTML forms and vanilla JavaScript (no SPA)

üìä MODULE 3: Dashboard View
Show:

All Tasks

Filtered by "Pending" and "Completed"

Sort by createdAt date (Ascending/Descending)

Search tasks by title

UI:

Table or card layout with action buttons

Dropdown/select for sorting and filtering

Search input field

Clean, mobile-responsive layout using custom CSS

üíº Tech Stack
Frontend: HTML5 + CSS3 + JS

Backend: Node.js + Express.js

Database: MongoDB + Mongoose

Auth: JWT + bcrypt



‚úÖ Notes:
Structure backend using controllers, routes, models

Use .env for environment variables

Apply modular, clean folder structure

Keep frontend user-friendly and not overly styled (like hand-coded)

No use of frontend libraries like React, Tailwind, Bootstrap, etc.

Implement error handling and feedback messages

Add session persistence using cookies/JWT on the frontend# Database Configuration
MONGODB_URI=mongodb+srv://subashree:subashree123@cluster0.w72rf.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

# JWT Configuration
JWT_SECRET=bc6d3a03493947638609122fc4333063d58b3410bcbf4a6e87f854f492573f22
JWT_EXPIRE=7d

# Server Configuration
PORT=5000
NODE_ENV=development                                                                                   give in sperate frontend backkend fodler tell along with filename where to paste code nad tell hwo to run both